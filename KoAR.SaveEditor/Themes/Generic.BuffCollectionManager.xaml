<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:core="clr-namespace:KoAR.Core;assembly=KoAR.Core"
    xmlns:constructs="clr-namespace:KoAR.SaveEditor.Constructs"
    xmlns:views="clr-namespace:KoAR.SaveEditor.Views">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/PresentationFramework.Aero;component/Themes/Aero.NormalColor.xaml" />
        <ResourceDictionary Source="/KoAR.SaveEditor;component/Views/Templates/BuffTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <BitmapImage x:Key="Copy" UriSource="/KoAR.SaveEditor;component/Resources/Copy.png" po:Freeze="True" />
    <BitmapImage x:Key="Delete" UriSource="/KoAR.SaveEditor;component/Resources/Delete.png" po:Freeze="True" />
    <constructs:HexConverter x:Key="HexConverter" />
    <constructs:NegatedBooleanConverter x:Key="NegatedBooleanConverter" />
    <constructs:GrayscaleConverter x:Key="GrayscaleConverter" />
    <DataTemplate x:Key="BuffToolTipTemplate" DataType="{x:Type core:Buff}">
        <views:BuffControl Buff="{Binding}" IsExpanded="True" />
    </DataTemplate>
    <Style TargetType="{x:Type views:BuffCollectionManager}">
        <Style.Resources>
            <Style TargetType="{x:Type Button}" x:Key="CommandButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Image x:Name="Icon" Width="16" Source="{TemplateBinding Tag}" Cursor="Hand" />
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="False" />
                                        <Condition Property="IsMouseOver" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source" TargetName="Icon" Value="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GrayscaleConverter}}" />
                                    <Setter TargetName="Icon" Property="OpacityMask">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" po:Freeze="True"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.25" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="0.85" ScaleY="0.85" po:Freeze="True" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            </Style>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type views:BuffCollectionManager}">
                    <GroupBox Header="{TemplateBinding Header}" HeaderTemplate="{TemplateBinding HeaderTemplate}" FocusVisualStyle="{x:Null}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TreeView Grid.ColumnSpan="2" BorderBrush="LightGray" ScrollViewer.HorizontalScrollBarVisibility="Disabled" FocusVisualStyle="{x:Null}" Height="150"
                                ItemsSource="{TemplateBinding Collection}" AlternationCount="2" Foreground="{TemplateBinding Foreground}" ItemTemplate="{StaticResource BuffTemplate}">
                                <TreeView.Style>
                                    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Collection, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Collection.Count, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.Style>
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                        <Style.Resources>
                                            <LinearGradientBrush x:Key="ItemHoverFill" EndPoint="0,1" po:Freeze="True">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#FFF1FBFF" />
                                                    <GradientStop Color="#FFD5F1FE" Offset="1"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                            <LinearGradientBrush x:Key="ItemSelectedFill" EndPoint="0,1" po:Freeze="True">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#FFD9F4FF" />
                                                    <GradientStop Color="#FF9BDDFB" Offset="1"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                            <LinearGradientBrush x:Key="ItemSelectedHoverFill" EndPoint="0,1" po:Freeze="True">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#FFEAF9FF" />
                                                    <GradientStop Color="#FFC9EDFD" Offset="1"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                            <SolidColorBrush x:Key="AlternateRowBrush" Color="#25BCBCBC" po:Freeze="True" />
                                            <PathGeometry x:Key="Geometry" po:Freeze="True">
                                                <PathGeometry.Figures>
                                                    <PathFigureCollection>
                                                        <PathFigure IsFilled="True" IsClosed="True">
                                                            <PathFigure.Segments>
                                                                <PathSegmentCollection>
                                                                    <LineSegment Point="0 6" />
                                                                    <LineSegment Point="6 0" />
                                                                </PathSegmentCollection>
                                                            </PathFigure.Segments>
                                                        </PathFigure>
                                                    </PathFigureCollection>
                                                </PathGeometry.Figures>
                                            </PathGeometry>
                                            <Style TargetType="{x:Type ToggleButton}" x:Key="ExpandButtonStyle">
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Width" Value="16" />
                                                <Setter Property="Height" Value="16" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border>
                                                                <Path Data="{StaticResource Geometry}">
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Style.Resources>
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" />
                                        <!--<Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition MinWidth="19" Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>
                                                        <ToggleButton x:Name="PART_Expander" Style="{StaticResource ToggleButtonStyle}" ClickMode="Press"
                                                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <Border Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                                            <ContentPresenter ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                        <ItemsPresenter x:Name="PART_ItemsPresenter" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Background" Value="{StaticResource ItemSelectedFill}" />
                                        <Setter Property="ItemContainerStyle" Value="{StaticResource {x:Type TreeViewItem}}" />-->
                                    </Style>
                                </TreeView.ItemContainerStyle>
                            </TreeView>
                            <!--
                            <ListBox x:Name="PART_ListBox" Grid.ColumnSpan="2" BorderBrush="LightGray" ScrollViewer.HorizontalScrollBarVisibility="Disabled" FocusVisualStyle="{x:Null}"
                                ItemsSource="{TemplateBinding Collection}" AlternationCount="2" MaxHeight="250"
                                VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel">
                                <ListBox.Style>
                                    <Style TargetType="{x:Type ListBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Collection, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Collection.Count, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.Style>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Style.Resources>
                                            <LinearGradientBrush x:Key="ListItemHoverFill" EndPoint="0,1" po:Freeze="True">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#FFF1FBFF" />
                                                    <GradientStop Color="#FFD5F1FE" Offset="1"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                            <LinearGradientBrush x:Key="ListItemSelectedFill" EndPoint="0,1" po:Freeze="True">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#FFD9F4FF" />
                                                    <GradientStop Color="#FF9BDDFB" Offset="1"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                            <LinearGradientBrush x:Key="ListItemSelectedHoverFill" EndPoint="0,1" po:Freeze="True">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#FFEAF9FF" />
                                                    <GradientStop Color="#FFC9EDFD" Offset="1"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                            <SolidColorBrush x:Key="AlternateRowBrush" Color="#25BCBCBC" po:Freeze="True" />
                                        </Style.Resources>
                                        <Setter Property="ContextMenu">
                                            <Setter.Value>
                                                <ContextMenu>
                                                    <MenuItem Command="Copy" CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                                </ContextMenu>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Margin" Value="0,0,0,1"/>
                                        <Setter Property="Padding" Value="5,2"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                        <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition MaxHeight="11"/>
                                                                    <RowDefinition/>
                                                                </Grid.RowDefinitions>
                                                                <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF"/>
                                                                <ContentPresenter Grid.RowSpan="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </Border>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                            <Setter Property="Background" Value="{StaticResource AlternateRowBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource ListItemHoverFill}"/>
                                                            <Setter Property="BorderBrush" Value="#FFCCF0FF"/>
                                                            <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible"/>
                                                        </Trigger>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource ListItemSelectedFill}"/>
                                                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                                                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF"/>
                                                            <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible"/>
                                                            <Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsSelected" Value="True"/>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}"/>
                                                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type core:Buff}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <views:BuffControl Buff="{Binding}" />
                                            <Button Grid.Column="1" Style="{StaticResource CommandButtonStyle}" Tag="{StaticResource Copy}" CommandTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                Command="Copy" ToolTip="Copy" />
                                            <Button Grid.Column="2" Tag="{StaticResource Delete}" CommandParameter="{Binding}" 
                                                IsEnabled="{Binding UnsupportedFormat, RelativeSource={RelativeSource AncestorType={x:Type views:BuffCollectionManager}}, Converter={StaticResource NegatedBooleanConverter}}"
                                                Command="{Binding DeleteBuffCommand, RelativeSource={RelativeSource AncestorType={x:Type views:BuffCollectionManager}}}" ToolTip="Delete">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButtonStyle}">
                                                        <Style.Triggers>
                                                            <Trigger Property="Command" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            -->
                            <GroupBox Header="Add Buff:" BorderThickness="1" BorderBrush="LightGray" FocusVisualStyle="{x:Null}">
                                <GroupBox.Style>
                                    <Style TargetType="{x:Type GroupBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding AddBuffCommand, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Collection, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding UnsupportedFormat, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Collection.Count, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
                                                <Setter Property="Margin" Value="0" />
                                                <Setter Property="Grid.Row" Value="0" />
                                                <Setter Property="Grid.RowSpan" Value="2" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Margin" Value="0,2,0,0" />
                                        <Setter Property="Grid.Row" Value="1" />
                                    </Style>
                                </GroupBox.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <views:BuffSelector Margin="2" Grid.ColumnSpan="2" Filter="{TemplateBinding BuffsFilter}" Buffs="{TemplateBinding Buffs}"
                                        SelectedBuff="{Binding PendingBuff, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox Grid.Row="1" VerticalAlignment="Center" Margin="2">
                                        <TextBox.Text>
                                            <Binding Path="PendingBuffId" Converter="{StaticResource HexConverter}" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </TextBox.Text>
                                    </TextBox>
                                    <Button Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="2" Command="{TemplateBinding AddBuffCommand}" 
                                        CommandParameter="{TemplateBinding PendingBuffId}" Content="Add" FocusVisualStyle="{x:Null}" />
                                </Grid>
                            </GroupBox>
                        </Grid>
                    </GroupBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>